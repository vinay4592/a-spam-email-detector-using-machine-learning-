"8/14/24, 10:10 AM                                             Code"
""
""
""
"1      # Import necessary libraries"
"2      import pandas as pd"
"3      import requests"
"4      import tarfile"
"5      import os"
"6      from sklearn.model_selection import train_test_split"
"7      from sklearn.feature_extraction.text import CountVectorizer, TfidfTransformer"
"8      from sklearn.pipeline import Pipeline"
"9      from sklearn.naive_bayes import MultinomialNB"
"10      from sklearn.svm import SVC"
"11      from sklearn.metrics import classification_report, accuracy_score"
"12"
"13      # Function to download and extract the SpamAssassin dataset"
"14      def download_and_extract_spamassassin():"
"15          url = ""https://spamassassin.apache.org/old/publiccorpus/20030228_spam.tar.bz2"""
"16          spam_tar_path = ""spam.tar.bz2"""
"17          nonspam_url ="
"""https://spamassassin.apache.org/old/publiccorpus/20030228_easy_ham.tar.bz2"""
"18          nonspam_tar_path = ""easy_ham.tar.bz2"""
"19"
"20             # Download spam data"
"21             response = requests.get(url, stream=True)"
"22             with open(spam_tar_path, 'wb') as file:"
"23                 file.write(response.content)"
"24"
"25             # Extract spam data"
"26             with tarfile.open(spam_tar_path, 'r:bz2') as tar:"
"27                 tar.extractall(path=""spam"")"
"28"
"29             # Download non-spam data"
"30             response = requests.get(nonspam_url, stream=True)"
"31             with open(nonspam_tar_path, 'wb') as file:"
"32                 file.write(response.content)"
"33"
"34             # Extract non-spam data"
"35             with tarfile.open(nonspam_tar_path, 'r:bz2') as tar:"
"36                 tar.extractall(path=""easy_ham"")"
"37"
"38             # Clean up tar files"
"39             os.remove(spam_tar_path)"
"40             os.remove(nonspam_tar_path)"
"41"
"42      # Function to load emails from the directory"
"43      def load_emails(directory, label):"
"44          emails = []"
"45          for filename in os.listdir(directory):"
"46              with open(os.path.join(directory, filename), 'r', encoding='latin-1') as"
"file:"
"47                  emails.append({"
"48                      'label': label,"
"49                      'text': file.read()"
"50                  })"
"51          return emails"
"52"
"53      # Main script"
"54      if __name__ == ""__main__"":"
"55          # Download and extract dataset"
"56          download_and_extract_spamassassin()"
"57"
""
"https://tarikjaber.github.io/Code-to-PDF/                                                       1/2"
"8/14/24, 10:10 AM                                           Code"
"58             # Load emails"
"59             spam_emails = load_emails('spam/spam', 'spam')"
"60             nonspam_emails = load_emails('easy_ham/easy_ham', 'nonspam')"
"61"
"62             # Create a DataFrame"
"63             dataset = pd.DataFrame(spam"
"64"
""
""
""
""
"https://tarikjaber.github.io/Code-to-PDF/                                        2/2"
""
